@inject IJSRuntime JSRuntime
@implements IAsyncDisposable


@code {
    [Parameter] public EventCallback<string> OnKeyPressed { get; set; }

    private IJSObjectReference? _module;
    private DotNetObjectReference<KeyPressListener>? _selfReference;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            _module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "/Components/KeyPressListener.razor.js");
            _selfReference = DotNetObjectReference.Create(this);
            await _module.InvokeVoidAsync("registerEvent", _selfReference);
        }
    }

    [JSInvokable("OnKeyPressed")]
    public async Task OnKeyPressedAsync(string key)
    {
        await OnKeyPressed.InvokeAsync(key);
    }

    public async ValueTask DisposeAsync()
    {
        if(_module is not null) {
            await _module.InvokeVoidAsync("unregisterEvent");
            await _module.DisposeAsync();
        }

        _selfReference?.Dispose();
    }
}