@attribute [Route(Routes.NormalNumbersNumberToJapanese)]
@inject NavigationService NavigationService
@inject JapaneseNumbersService JapaneseService
@inject OptionsService OptionsService
@layout EmptyLayout

<RevealGame Prompt="@Number.ToString()"
            Answer="@_romaji"
            @bind-Reveal="_showRomaji"
            Next="NavigateToRandomNumber"
            Exit="NavigateToMenu" />

@code {
    [Parameter, SupplyParameterFromQuery] public int? Number { get; set; }

    private AppOptions.NormalNumbersOptions _options = null!;
    private string? _romaji;
    private bool _showRomaji;

    protected override async Task OnInitializedAsync()
    {
        _options = (await OptionsService.GetOptionsAsync()).NormalNumbers;

        if (Number is null)
        {
            NavigateToRandomNumber();
            return;
        }

    }

    protected override void OnParametersSet()
    {
        if (Number is not null)
            _romaji = JapaneseService.ConvertToJapaneseRomaji(Number.Value, _options.UseChoonpu, _options.UseSpaces);
    }


    private void OnKeyPressed(string key)
    {
        if (key == "Space")
        {
            if (!_showRomaji)
            {
                RevealRomaji();
            }
            else
            {
                NavigateToRandomNumber();
            }
        }
    }

    private void RevealRomaji()
    {
        _showRomaji = true;
    }

    private void NavigateToRandomNumber()
    {
        int number;

        _showRomaji = false;

        number = Utils.GetNewRandomInt(_options.Minimum, _options.Maximum + 1, Number);

        NavigationService.ChangeQueryString($"{nameof(Number)}={number}");
    }

    private void NavigateToMenu()
    {
        NavigationService.Goto(Routes.NormalNumbersMenu);
    }
}