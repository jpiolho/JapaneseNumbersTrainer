@page "/normal-numbers/number-to-japanese"
@inject NavigationService NavigationService
@inject JapaneseService JapaneseService
@inject OptionsService OptionsService
@layout EmptyLayout

<KeyPressListener OnKeyPressed="OnKeyPressed" />

<GameLayout>
    <Body>
        <h1>@Number</h1>
        <Hiddeable Visible="_showRomaji">
            <h3>@_romaji</h3>
        </Hiddeable>
    </Body>

    <Footer>
        <MenuButtonList>
            @if (!_showRomaji)
            {
                <MenuButton Text="Reveal romaji" Click="RevealRomaji" />
            }
            else
            {
                <MenuButton Text="Next number" Click="NavigateToRandomNumber" />
            }
            <MenuButton Text="Back" ButtonStyle="MenuButton.Style.Secondary" Click="NavigateToMenu" />
        </MenuButtonList>
    </Footer>
</GameLayout>


@code {
    [Parameter, SupplyParameterFromQuery] public int? Number { get; set; }


    private AppOptions.NormalNumbersOptions _options = null!;
    private string? _romaji;
    private bool _showRomaji;

    protected override async Task OnInitializedAsync()
    {
        _options = (await OptionsService.GetOptionsAsync()).NormalNumbers;

        if(Number is null)
        {
            NavigateToRandomNumber();
            return;
        }

    }

    protected override void OnParametersSet()
    {
        if (Number is not null)
            _romaji = JapaneseService.ConvertToJapaneseRomaji(Number.Value, _options.UseChoonpu, _options.UseSpaces);
    }


    private void OnKeyPressed(string key)
    {
        if (key == "Space")
        {
            if (!_showRomaji)
            {
                RevealRomaji();
            }
            else
            {
                NavigateToRandomNumber();
            }
        }
    }

    private void RevealRomaji()
    {
        _showRomaji = true;
    }

    private void NavigateToRandomNumber()
    {
        int number;

        _showRomaji = false;

        do
        {
            number = Random.Shared.Next(_options.Minimum, _options.Maximum+1);
        }
        while (number == Number);

        NavigationService.ChangeQueryString($"{nameof(Number)}={number}");
    }

    private void NavigateToMenu()
    {
        NavigationService.GoToNormalNumbersMenu();
    }
}