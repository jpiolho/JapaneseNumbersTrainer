@page "/dates/months"
@inject NavigationService NavigationService
@inject JapaneseDateService JapaneseService
@inject OptionsService OptionsService
@layout EmptyLayout

@if (MonthAsString is null)
    return;

<RevealGame Prompt="@(Month.ToString())"
            Answer="@Romaji"
            @bind-Reveal="@_showRomaji"
            Next="NavigateToRandomMonth"
            Exit="NavigateToMenu" />

@code {
    private const string QueryParameterMonth = "month";
    [Parameter, SupplyParameterFromQuery(Name = QueryParameterMonth)] public string? MonthAsString { get; set; }

    private Month? Month => MonthAsString is not null ? Enum.Parse<Month>(MonthAsString, true) : null;
    private string? Romaji => Month.HasValue ? JapaneseService.MonthToRomaji(Month.Value) : null;

    private bool _showRomaji;

    protected override Task OnInitializedAsync()
    {
        if (Month is null)
            NavigateToRandomMonth();

        return Task.CompletedTask;
    }

    private void NavigateToRandomMonth()
    {
        _showRomaji = false;

        var month = Utils.GetNewRandomFromArrayNullable(Enum.GetValues<Month>(), Month);

        NavigationService.ChangeQueryString($"{QueryParameterMonth}={month}");
    }

    private void NavigateToMenu()
    {
        NavigationService.GoToDatesMenu();
    }
}